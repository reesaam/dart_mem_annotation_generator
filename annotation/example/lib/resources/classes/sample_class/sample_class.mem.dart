// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'sample_class.dart';

// **************************************************************************
// Generator: AnnotationBuilder
// **************************************************************************

///   This File is Generated by Mem Generator
///   [Sample] Annotated with [Mem] with [all] mode
///   Including:
///     Model Class, Entity Class and Mapper Class,
///     Model Classes includes [toJson] and [fromJson] functions, and Entity Classes are not!
///     Mappers will convert every filed in the class including [SubClasses], they should be annotated as well.
///     [Mem] Annotation will generate all these fields for all Classes, so all subclasses should decorated with annotation to generate model, entity and mapper to use them here
///     [Enums] also supported and they will be detected and count into account for mappers and also json conversion
///     Classes are decorated with [Freezed], other functions will generate with [Freezed]

///   Details:
///     Class: Sample
///     Constructors Count: 1
///     Variables Count: 6

///   ==> Model Class:
@Freezed(toJson: true, fromJson: true)
class SampleModel with _$SampleModel {
  const factory SampleModel({
    @JsonEnum() final SampleEnum? sampleEnum,
    final String? name,
    final String? description,
    final InnerSampleModel? innerClassModel,
    final List<String>? sampleList,
    final List<InnerSampleModel>? innerSampleListModel,
  }) = _SampleModel;

  factory SampleModel.fromJson(Map<String, dynamic> json) =>
      _$SampleModelFromJson(json);
}

///   ==> Entity Class:
@Freezed(toJson: false, fromJson: false)
class SampleEntity with _$SampleEntity {
  const factory SampleEntity({
    @JsonEnum() final SampleEnum? sampleEnum,
    final String? name,
    final String? description,
    final InnerSampleEntity? innerClassEntity,
    final List<String>? sampleList,
    final List<InnerSampleEntity>? innerSampleListEntity,
  }) = _SampleEntity;
}

///   ==> Mapper Classes:
///   ==> Entity to Model Mapper Extension
extension MapperExtensionOnSampleEntity on SampleEntity {
  SampleModel get mapper => SampleModel(
        sampleEnum: sampleEnum,
        name: name,
        description: description,
        innerClassModel: innerClassEntity?.mapper,
        sampleList: sampleList,
        innerSampleListModel:
            innerSampleListEntity?.map((e) => e.mapper).toList(),
      );
}

///   ==> Model to Entity Mapper Extension
extension MapperExtensionOnSampleModel on SampleModel {
  SampleEntity get mapper => SampleEntity(
        sampleEnum: sampleEnum,
        name: name,
        description: description,
        innerClassEntity: innerClassModel?.mapper,
        sampleList: sampleList,
        innerSampleListEntity:
            innerSampleListModel?.map((e) => e.mapper).toList(),
      );
}
