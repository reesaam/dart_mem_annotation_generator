// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'sample_inner_class.dart';

// **************************************************************************
// Generator: AnnotationBuilder
// **************************************************************************

///

///   This File is Generated by Mem Generator
///   [InnerSample] Annotated with [Mem] with [all] mode
///   Including:
///     Model Class, Entity Class and Mapper Class,
///     Model Classes includes [toJson] and [fromJson] functions, and Entity Classes are not!
///     Mappers will convert every filed in the class including [SubClasses], they should be annotated as well.
///     [Mem] Annotation will generate all these fields for all Classes, so all subclasses should decorated with annotation to generate model, entity and mapper to use them here
///     [Enums] also supported and they will be detected and count into account for mappers and also json conversion

///   Details:
///     Class: InnerSample
///     Constructors Count: 1
///     Variables Count: 3

///   ==> Model Class:
/// InnerSample
/// (Instance of 'Variable', Instance of 'Variable', Instance of 'Variable')
/// null
/// null
/// null
/// null

class InnerSampleModel {
  InnerSampleModel({
    this.name,
    this.description,
    this.innerInnerSampleClassModel,
  });

  /// type: String?
  /// isList: false
  /// typeString: String?
  /// isCoreType: true
  ///
  String? name;

  /// type: String?
  /// isList: false
  /// typeString: String?
  /// isCoreType: true
  ///
  String? description;

  /// type: InnerInnerSample?
  /// isList: false
  /// typeString: InnerInnerSample?
  /// isCoreType: false
  ///
  InnerInnerSampleModel? innerInnerSampleClassModel;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['name'] = name;
    map['description'] = description;
    map['innerInnerSampleClassModel'] = innerInnerSampleClassModel?.toJson();
    return map;
  }

  InnerSampleModel.fromJson(dynamic json) {
    name = json[name];
    description = json[description];
    innerInnerSampleClassModel =
        InnerInnerSampleModel.fromJson(json['innerInnerSampleClassModel']);
  }
}

///   ==> Entity Class:

class InnerSampleEntity {
  InnerSampleEntity({
    this.name,
    this.description,
    this.innerInnerSampleClassEntity,
  });

  /// type: String?
  /// isList: false
  /// typeString: String?
  /// isCoreType: true
  ///
  String? name;

  /// type: String?
  /// isList: false
  /// typeString: String?
  /// isCoreType: true
  ///
  String? description;

  /// type: InnerInnerSample?
  /// isList: false
  /// typeString: InnerInnerSample?
  /// isCoreType: false
  ///
  InnerInnerSampleEntity? innerInnerSampleClassEntity;
}

///   ==> Mapper Classes:
///   ==> Entity to Model Conversion Extension
extension ExtensionOnInnerSampleEntity on InnerSampleEntity {
  InnerSampleModel get mapper => InnerSampleModel(
        name: name,
        description: description,
        innerInnerSampleClassModel: innerInnerSampleClassEntity?.mapper,
      );
}

///   ==> Model to Entity Conversion Extension
extension ExtensionOnInnerSampleModel on InnerSampleModel {
  InnerSampleEntity get mapper => InnerSampleEntity(
        name: name,
        description: description,
        innerInnerSampleClassEntity: innerInnerSampleClassModel?.mapper,
      );
}
