// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'sample_inner_class.dart';

// **************************************************************************
// Generator: AnnotationBuilder
// **************************************************************************

///   This File is Generated by ${PackageAuthorInfo.packageNameDescription}
///   [InnerSample] Annotated with [${PackageAuthorInfo.annotationName}] with [all] mode
///   Including:
///     Model Class, Entity Class and Mapper Class,
///     Model Classes includes [toJson] and [fromJson] functions, and Entity Classes are not!
///     Mappers will convert every filed in the class including [SubClasses], they should be annotated as well.
///     [${PackageAuthorInfo.annotationName}] Annotation will generate all these fields for all Classes, so all subclasses should decorated with annotation to generate model, entity and mapper to use them here
///     [Enums] also supported and they will be detected and count into account for mappers and also json conversion
///     Classes are decorated with [Freezed], other functions will generate with [Freezed]

///   Details:
///     Class: InnerSample
///     Constructors Count: 1
///     Variables Count: 2

///   ==> Model Class:
@Freezed(toJson: true, fromJson: true)
class InnerSampleModel with _$InnerSampleModel {
  const factory InnerSampleModel({
    final String? name,
    final String? description,
  }) = _InnerSampleModel;

  factory InnerSampleModel.fromJson(Map<String, dynamic> json) =>
      _$InnerSampleModelFromJson(json);
}

///   ==> Entity Class:
@Freezed(toJson: false, fromJson: false)
class InnerSampleEntity with _$InnerSampleEntity {
  const factory InnerSampleEntity({
    final String? name,
    final String? description,
  }) = _InnerSampleEntity;
}

///   ==> Mapper Classes:
///   ==> Entity to Model Mapper Extension
extension MapperExtensionOnInnerSampleEntity on InnerSampleEntity {
  InnerSampleModel get mapper => InnerSampleModel(
        name: name,
        description: description,
      );
}

///   ==> Model to Entity Mapper Extension
extension MapperExtensionOnInnerSampleModel on InnerSampleModel {
  InnerSampleEntity get mapper => InnerSampleEntity(
        name: name,
        description: description,
      );
}
